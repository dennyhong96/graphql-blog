{"version":3,"sources":["assets/icons/google.png","services/firebase.js","context/authContext.js","context/postUpdateContext.js","apollo/fragments/posts.js","apollo/mutations/posts.js","apollo/queries/posts.js","components/posts/PostCard.js","components/posts/PostCardSkeleton.js","apollo/subscriptions/posts.js","pages/Home.js","pages/auth/Register.js","apollo/fragments/auth.js","apollo/mutations/auth.js","pages/auth/CompleteRegister.js","pages/auth/Login.js","pages/auth/ForgetPassword.js","apollo/queries/auth.js","components/ui/SearchBar.js","utils/resizeFile.js","utils/restRequests.js","hooks/useResetDropZone.js","components/dashboard/profileDetails/ImageDropZone.js","components/dashboard/profileDetails/ProfileImages.js","components/dashboard/profileDetails/UpdateProfileForm.js","components/dashboard/profileDetails/ProfileDetails.js","components/ui/Dialog.js","components/dashboard/profileDetails/ProfileResetPassword.js","pages/dashboard/Profile.js","components/posts/PostEditor.js","components/posts/PostImageUpdate.js","pages/dashboard/CreatePost.js","hooks/useNProgress.js","components/routes/PrivateRoute.js","pages/dashboard/Dashboard.js","pages/dashboard/MyPosts.js","pages/users/UserPublicProfile.js","pages/posts/Post.js","components/routes/Route.js","components/routes/PublicRoute.js","apollo/client.js","components/ui/Navbar.js","components/users/UserCard.js","components/users/UserCardSkeleton.js","pages/users/UserList.js","components/posts/PostCardUpdate.js","App.js","mui/theme.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","projectId","storageBucket","appId","measurementId","auth","googleAuthProvider","GoogleAuthProvider","INITIAL_STATE","user","firebaseReducer","state","action","type","payload","AuthContext","createContext","AuthProvider","children","useReducer","dispatch","useEffect","unsubscribe","onAuthStateChanged","a","getIdTokenResult","token","localStorage","setItem","email","removeItem","Provider","value","UpdatePostContext","UpdatePostProvider","useState","show","post","setState","PostInfo","gql","CreatePost","DeletePost","UpdatePost","ListPosts","ListPostsByUser","GetPost","CountPosts","SearchPosts","PostCard","loggedInUser","useContext","useMutation","update","cache","deletePost","data","listPosts","readQuery","query","writeQuery","filter","p","_id","error","console","listPostsByUser","variables","username","postedBy","handleDelete","id","toast","success","title","message","Card","elevation","CardHeader","avatar","Avatar","src","images","url","subheader","formatDistance","Date","createdAt","addSuffix","CardActionArea","component","Link","to","image","height","transition","style","width","objectFit","CardContent","Typography","gutterBottom","noWrap","fontWeight","fontSize","tags","map","t","idx","Chip","key","label","color","size","marginRight","CardActions","disableSpacing","display","marginLeft","IconButton","onClick","PostCardSkeleton","Skeleton","variant","marginBottom","borderRadius","OnPostCreated","OnPostUpdated","OnPostDeleted","skeletonVariants","hidden","opacity","visible","duration","exit","variants","y","Home","firstLoad","setFirstLoad","displayPosts","setDisplayPosts","page","setPage","useSubscription","onSubscriptionData","client","subscriptionData","onPostCreated","onPostDeleted","countData","useQuery","pollInterval","fetchPolicy","notifyOnNetworkStatusChange","onCompleted","fetchMore","loading","Grid","container","direction","minHeight","item","spacing","Array","from","length","_","xs","sm","md","div","initial","animate","slice","marginTop","Box","Pagination","margin","count","Math","ceil","countPosts","onChange","newPage","numPage","numLimit","updateQuery","prev","fetchMoreResult","newPosts","find","po","Register","setEmail","setLoading","handleSubmit","evt","preventDefault","sendSignInLinkToEmail","process","handleCodeInApp","padding","align","onSubmit","TextField","fullWidth","target","inputProps","Button","disabled","CircularProgress","UserInfo","UpdateUser","CreateUser","CompleteRegister","history","useHistory","createUser","getItem","password","setPassword","emailLink","setEmailLink","window","location","href","pushState","signInWithEmailLink","res","emailVerified","currentUser","log","updatePassword","push","Error","Login","handleLogin","signInWithEmailAndPassword","authenticateUser","handleGoogleSignin","signInWithPopup","GoogleIcon","alt","ForgetPassword","sendPasswordResetEmail","TIMEOUT","GetUser","ListUsers","GetPublicProfile","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","uploadProfileImages","imageFiles","promises","i","all","imageUris","axios","headers","authorization","deleteProfileImage","delete","params","imageKey","uploadPostImage","imageFile","useResetDropZone","showDropZone","setShowDropZone","setTimeout","ImageDropZone","handleFiles","acceptedFiles","dropzoneText","filesLimit","clearOnUnmount","className","ProfileImages","classes","useStyles","deleteBtn","deleteIcon","boxShadow","makeStyles","flexWrap","position","right","top","backgroundColor","UpdateProfileForm","name","about","handleChange","multiline","ProfileDetails","setImageFiles","formData","setFormData","input","updateUser","useMemo","getUser","newImages","updatedUser","response","successMessage","ResetPasswordDialog","open","handleClose","confirmButtonText","handleConfirm","Dialog","onClose","maxWidth","DialogTitle","DialogContent","DialogActions","autoFocus","ProfileResetPassword","setOpen","passwordConfirm","setPasswordConfirm","handleResetPassword","bind","Profile","split","PostEditor","content","setContent","PostImageUpdate","isUpdate","setTitle","setImage","setTags","CreatePostMutation","createPost","uploadedImg","createPostRes","justify","placeholder","imgs","useNProgress","nprogress","start","done","ProgressRoute","Component","rest","SUBPATHS","pathname","useLazyQuery","postsData","postsLoading","postsError","Fade","in","timeout","theme","tabs","borderRight","palette","divider","Dashboard","useLocation","Tabs","orientation","findIndex","path","Tab","PrivateRoute","exact","UserPublicProfile","useParams","Hidden","xsDown","getPublicProfile","paragraph","Post","Paper","getPost","alignItems","justifyContent","toLocaleDateString","parse","props","httpLink","HttpLink","wsLink","WebSocketLink","options","reconnect","splitedLink","definition","getMainDefinition","kind","operation","authLink","setContext","cleanTypeName","ApolloLink","forward","JSON","stringify","undefined","ApolloClient","link","InMemoryCache","SearchBar","searchPosts","searchText","setSearchText","setOptions","clearTimeout","term","Autocomplete","onOpen","getOptionSelected","option","getOptionLabel","renderInput","e","InputProps","endAdornment","borderBottom","fill","transform","Navabr","React","anchorEl","setAnchorEl","handleLogout","signOut","resetStore","root","AppBar","Container","Toolbar","toolBar","smUp","edge","menuButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","flexGrow","textDecoration","UserCard","Divider","UserCardSkeleton","UserList","listUsers","PostCardUpdate","updatePost","newImage","setNewImage","handleUpdate","newImageObj","updateInput","defaultValue","App","Navbar","paddingTop","PublicRoute","Route","bodyStyle","fontFamily","createMuiTheme","typography","primary","main","secondary","background","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.51a87b3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/google.640b004d.png\";","import * as firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAFP6uD_kpyFQvcDlTyRVIjXtRlrNir1Dg\",\n  authDomain: \"nextblog-58070.firebaseapp.com\",\n  // databaseURL: \"https://nextblog-58070.firebaseio.com\",\n  projectId: \"nextblog-58070\",\n  storageBucket: \"nextblog-58070.appspot.com\",\n  // messagingSenderId: \"440463656920\",\n  appId: \"1:440463656920:web:f835cd7749e1970a3c14ad\",\n  measurementId: \"G-V4CSFJFWTK\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n// export default firebase;\n\nexport const auth = firebase.auth();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport { auth } from \"../services/firebase\";\n\n// Initial State\nconst INITIAL_STATE = {\n  user: null,\n};\n\n// Reducer\nconst firebaseReducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"USER_AUTHENTICATED\":\n      return { ...state, user: payload };\n    case \"AUTH_ERROR\":\n    case \"USER_LOGGED_OUT\":\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Create context provider\nconst AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(firebaseReducer, INITIAL_STATE);\n\n  // Try to load user to AuthContext on app load\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const { token } = await user.getIdTokenResult();\n        localStorage.setItem(\"AUTH_TOKEN\", token);\n\n        dispatch({\n          type: \"USER_AUTHENTICATED\",\n          payload: { email: user.email, token },\n        });\n      } else {\n        localStorage.removeItem(\"AUTH_TOKEN\");\n        dispatch({ type: \"AUTH_ERROR\" });\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n","import React, { createContext, useState } from \"react\";\n\nexport const UpdatePostContext = createContext();\n\nexport const UpdatePostProvider = ({ children }) => {\n  const [state, setState] = useState({ show: false, post: null });\n\n  return (\n    <UpdatePostContext.Provider value={{ state, setState }}>\n      {children}\n    </UpdatePostContext.Provider>\n  );\n};\n","import { gql } from \"@apollo/client\";\n\nexport const PostInfo = gql`\n  fragment postInfo on Post {\n    _id\n    title\n    content\n    tags\n    image {\n      url\n      key\n    }\n    postedBy {\n      _id\n      username\n      name\n      email\n      images {\n        url\n        key\n      }\n      about\n      createdAt\n      updatedAt\n    }\n    createdAt\n    updatedAt\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nimport { PostInfo } from \"../fragments/posts\";\n\nexport const CreatePost = gql`\n  mutation CreatePost($input: CreatePostInput!) {\n    createPost(input: $input) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const DeletePost = gql`\n  mutation DeletePost($id: ID!) {\n    deletePost(id: $id) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const UpdatePost = gql`\n  mutation UpdatePost($input: UpdatePostInput!) {\n    updatePost(input: $input) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n","import { gql } from \"@apollo/client\";\n\nimport { PostInfo } from \"../fragments/posts\";\n\nexport const ListPosts = gql`\n  query ListPosts($numPage: Int, $numLimit: Int) {\n    listPosts(numPage: $numPage, numLimit: $numLimit) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const ListPostsByUser = gql`\n  query ListPostsByUser($username: String!) {\n    listPostsByUser(username: $username) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const GetPost = gql`\n  query GetPost($id: ID!) {\n    getPost(id: $id) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const CountPosts = gql`\n  query CountPosts {\n    countPosts\n  }\n`;\n\nexport const SearchPosts = gql`\n  query SearchPosts($term: String!) {\n    searchPosts(term: $term) {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n","import React, { Fragment, useContext } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport ImageFadeIn from \"react-image-fade-in\";\nimport { useMutation } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\n\nimport { DeletePost } from \"../../apollo/mutations/posts\";\nimport { ListPosts, ListPostsByUser } from \"../../apollo/queries/posts\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { UpdatePostContext } from \"../../context/postUpdateContext\";\n\nconst PostCard = ({ post }) => {\n  const {\n    state: { user: loggedInUser },\n  } = useContext(AuthContext);\n  const { setState } = useContext(UpdatePostContext);\n\n  const [deletePost] = useMutation(DeletePost, {\n    update: (cache, { data: { deletePost } }) => {\n      try {\n        const { listPosts } = cache.readQuery({\n          query: ListPosts,\n        });\n\n        cache.writeQuery({\n          query: ListPosts,\n          data: {\n            listPosts: listPosts.filter((p) => p._id !== deletePost._id),\n          },\n        });\n      } catch (error) {\n        // Handle listPosts query not executed yet\n        console.error(\"[CERATE POST UPDATE CACHE FAILED - ListPosts QUERY]\");\n      }\n\n      try {\n        const { listPostsByUser } = cache.readQuery({\n          query: ListPostsByUser,\n          variables: { username: deletePost.postedBy.username },\n        });\n\n        cache.writeQuery({\n          query: ListPostsByUser,\n          variables: { username: deletePost.postedBy.username },\n          data: {\n            listPostsByUser: listPostsByUser.filter(\n              (p) => p._id !== deletePost._id\n            ),\n          },\n        });\n      } catch (error) {\n        // Handle listPosts query not executed yet\n        console.error(\n          \"[CERATE POST UPDATE CACHE FAILED - ListPostsByUser QUERY]\"\n        );\n      }\n    },\n  });\n\n  const handleDelete = async () => {\n    try {\n      await deletePost({\n        variables: { id: post._id },\n      });\n      toast.success(`Post ${post.title} successfully deleted.`);\n    } catch (error) {\n      console.error(\"[DELETE POST ERROR]\", error);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Card elevation={4}>\n      {/* Card Head User iInfo & Date */}\n      <CardHeader\n        avatar={<Avatar src={post.postedBy.images[0].url} />}\n        title={`@${post.postedBy.username}`}\n        subheader={formatDistance(new Date(post.createdAt), new Date(), {\n          addSuffix: true,\n        })}\n      />\n\n      <CardActionArea component={Link} to={`/posts/${post._id}`}>\n        {/* Card Image */}\n        <ImageFadeIn\n          src={post.image.url}\n          title={post.title}\n          height={200}\n          transition={500}\n          style={{ width: \"100%\", height: 200, objectFit: \"cover\" }}\n        />\n\n        {/* Card Title */}\n        <CardContent>\n          <Typography\n            gutterBottom\n            noWrap\n            style={{ fontWeight: 500, fontSize: \"1.1rem\" }}\n          >\n            {post.title}\n          </Typography>\n          {post.tags.map((t, idx) => (\n            <Chip\n              key={`${t}-idx`}\n              label={t}\n              color=\"secondary\"\n              size=\"small\"\n              style={{ marginRight: 3 }}\n            />\n          ))}\n        </CardContent>\n      </CardActionArea>\n\n      <CardActions disableSpacing style={{ display: \"flex\" }}>\n        <div style={{ marginLeft: \"auto\" }}>\n          {loggedInUser && post.postedBy.email === loggedInUser.email && (\n            <Fragment>\n              <IconButton onClick={handleDelete}>\n                <DeleteOutlineOutlinedIcon />\n              </IconButton>\n              <IconButton onClick={() => setState({ post })}>\n                <EditRoundedIcon />\n              </IconButton>\n            </Fragment>\n          )}\n          <IconButton component={Link} to={`/posts/${post._id}`}>\n            <VisibilityRoundedIcon />\n          </IconButton>\n        </div>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst PostCardSkeleton = () => {\n  return (\n    <Card elevation={4}>\n      {/* Card Head User iInfo & Date */}\n      <CardHeader\n        avatar={<Skeleton variant=\"circle\" width={50} height={50} />}\n        title={\n          <Skeleton variant=\"rect\" width=\"30%\" style={{ marginBottom: 5 }} />\n        }\n        subheader={<Skeleton variant=\"rect\" width=\"40%\" />}\n      />\n\n      {/* Card Image */}\n      <Skeleton variant=\"rect\" style={{ height: 200, width: \"100%\" }} />\n\n      {/* Card Title */}\n      <CardContent>\n        <Skeleton variant=\"rect\" width=\"100%\" style={{ marginBottom: 5 }} />\n        <Skeleton variant=\"rect\" width=\"75%\" style={{ marginBottom: 10 }} />\n\n        {/* Chips */}\n        <Skeleton\n          variant=\"rect\"\n          width=\"20%\"\n          style={{\n            borderRadius: \"5rem\",\n            display: \"inline-block\",\n            marginRight: 3,\n            height: 20,\n          }}\n        />\n        <Skeleton\n          variant=\"rect\"\n          width=\"20%\"\n          style={{\n            borderRadius: \"5rem\",\n            display: \"inline-block\",\n            marginRight: 3,\n            height: 20,\n          }}\n        />\n        <Skeleton\n          variant=\"rect\"\n          width=\"20%\"\n          style={{\n            borderRadius: \"5rem\",\n            display: \"inline-block\",\n            marginRight: 3,\n            height: 20,\n          }}\n        />\n      </CardContent>\n      <CardActions disableSpacing style={{ display: \"flex\" }}>\n        <Skeleton\n          variant=\"rect\"\n          width=\"25%\"\n          style={{ marginLeft: \"auto\", height: 30 }}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PostCardSkeleton;\n","import { gql } from \"@apollo/client\";\n\nimport { PostInfo } from \"../fragments/posts\";\n\nexport const OnPostCreated = gql`\n  subscription OnPostCreated {\n    onPostCreated {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const OnPostUpdated = gql`\n  subscription onPostUpdated {\n    onPostUpdated {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n\nexport const OnPostDeleted = gql`\n  subscription onPostDeleted {\n    onPostDeleted {\n      ...postInfo\n    }\n  }\n  ${PostInfo}\n`;\n","import React, { Fragment, useState } from \"react\";\nimport { useQuery, useSubscription } from \"@apollo/client\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nimport PostCard from \"../components/posts/PostCard\";\nimport PostCardSkeleton from \"../components/posts/PostCardSkeleton\";\nimport { ListPosts, CountPosts } from \"../apollo/queries/posts\";\nimport {\n  OnPostCreated,\n  OnPostUpdated,\n  OnPostDeleted,\n} from \"../apollo/subscriptions/posts\";\n\nconst skeletonVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 0.15,\n    },\n  },\n  exit: {\n    opacity: 0,\n    transition: {\n      duration: 0.15,\n    },\n  },\n};\n\nconst variants = {\n  hidden: { opacity: 0, y: -50 },\n  visible: {\n    opacity: 1,\n    y: -0,\n  },\n  exit: {\n    opacity: 0,\n    y: -50,\n  },\n};\n\nconst NUM_LIMIT = 6; // Must be in sync with default NUM_LIMIT on server side listPost resolver\n\nconst Home = () => {\n  const [firstLoad, setFirstLoad] = useState(true);\n  const [displayPosts, setDisplayPosts] = useState([]);\n  const [page, setPage] = useState(1);\n\n  // Subscribe to new post created\n  useSubscription(OnPostCreated, {\n    onSubscriptionData({ client, subscriptionData }) {\n      const { listPosts } = client.cache.readQuery({ query: ListPosts });\n      client.cache.writeQuery({\n        query: ListPosts,\n        data: {\n          listPosts: [...listPosts, subscriptionData.data.onPostCreated],\n        },\n      });\n    },\n  });\n\n  // Subscribe to post updated\n  // single entity, apollo handle cache update automatically using __typename and id\n  useSubscription(OnPostUpdated);\n\n  // Subscribe to post deleted\n  useSubscription(OnPostDeleted, {\n    onSubscriptionData({ client, subscriptionData }) {\n      const { listPosts } = client.cache.readQuery({ query: ListPosts });\n      client.cache.writeQuery({\n        query: ListPosts,\n        data: {\n          listPosts: listPosts.filter(\n            (p) => p._id !== subscriptionData.data.onPostDeleted._id\n          ),\n        },\n      });\n    },\n  });\n\n  // Fetch total posts count for pagination, poll every 10 seconds\n  const { data: countData } = useQuery(CountPosts, { pollInterval: 10000 });\n\n  // listPosts query with fetchMore\n  const { fetchMore, error, loading } = useQuery(ListPosts, {\n    fetchPolicy: \"cache-and-network\", // Must for fetchMore\n    notifyOnNetworkStatusChange: false,\n    onCompleted(data) {\n      setDisplayPosts(data.listPosts);\n      setFirstLoad(false);\n    },\n  });\n\n  // Handle page change\n  const handlePageChange = (_, newPage) => {\n    if (newPage !== page) {\n      setPage(newPage);\n      fetchMore({\n        variables: { numPage: newPage, numLimit: NUM_LIMIT },\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) return prev;\n          const newPosts = fetchMoreResult.listPosts.filter(\n            (p) => !prev.listPosts.find((po) => po._id === p._id)\n          );\n          return {\n            ...prev,\n            listPosts: [...prev.listPosts, ...newPosts],\n          };\n        },\n      });\n    }\n  };\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <Fragment>\n      <Grid\n        container\n        direction=\"column\"\n        style={{\n          minHeight: `calc(100vh - 64px - 2rem)`,\n        }}\n      >\n        <Grid item>\n          <AnimatePresence>\n            <Grid container spacing={4}>\n              {/* Render search results if any */}\n\n              {/* Show skeleton cards on first loading */}\n              {firstLoad &&\n                loading &&\n                Array.from({ length: 6 }).map((_, idx) => (\n                  <Grid item key={idx} xs={12} sm={6} md={4}>\n                    <motion.div\n                      variants={skeletonVariants}\n                      initial=\"hidden\"\n                      animate=\"visible\"\n                      exit=\"exit\"\n                    >\n                      <PostCardSkeleton />\n                    </motion.div>\n                  </Grid>\n                ))}\n\n              {/* Show cards */}\n              {!error &&\n                displayPosts\n                  .slice(\n                    (page - 1) * NUM_LIMIT,\n                    (page - 1) * NUM_LIMIT + NUM_LIMIT\n                  )\n                  .map((post) => (\n                    <Grid item xs={12} sm={6} md={4} key={post._id}>\n                      <motion.div\n                        variants={variants}\n                        initial=\"hidden\"\n                        animate=\"visible\"\n                        exit=\"exit\"\n                      >\n                        <PostCard post={post} />\n                      </motion.div>\n                    </Grid>\n                  ))}\n            </Grid>\n          </AnimatePresence>\n        </Grid>\n\n        <Grid item style={{ marginTop: \"auto\", marginBottom: \"1rem\" }}>\n          <Box style={{ display: \"flex\", marginTop: \"1rem\" }}>\n            {countData && (\n              <Pagination\n                color=\"primary\"\n                style={{ margin: \"0 auto\" }}\n                count={Math.ceil(countData.countPosts / NUM_LIMIT)}\n                page={page}\n                onChange={handlePageChange}\n              />\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { auth } from \"../../services/firebase\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    try {\n      // Tell firebase to send confirmation link to user's email\n      await auth.sendSignInLinkToEmail(email, {\n        url: process.env.REACT_APP_CONFIMATION_EMAIL_REDIRECT,\n        handleCodeInApp: true,\n      });\n\n      // Store user's email into localstorage\n      localStorage.setItem(\"REGISTER_EMAIL\", email);\n\n      // Display a success toast\n      toast.success(\n        `Link successfully sent to ${email}, click the link to complete your registration.`\n      );\n\n      setEmail(\"\");\n    } catch (error) {\n      console.error(error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs>\n        <Card style={{ padding: \"1rem\" }} elevation={3}>\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Register Account\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <TextField\n                id=\"register-email\"\n                label=\"Enter your email address\"\n                fullWidth\n                value={email}\n                onChange={(evt) => setEmail(evt.target.value)}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"email\" }}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={!email || !!loading}\n                fullWidth\n                type=\"submit\"\n              >\n                {loading ? (\n                  <CircularProgress\n                    style={{ height: \"1.5rem\", width: \"1.5rem\" }}\n                  />\n                ) : (\n                  \"Register\"\n                )}\n              </Button>\n            </Box>\n            <Typography\n              variant=\"caption\"\n              style={{ display: \"block\", marginTop: \"0.5rem\" }}\n            >\n              Has an account? <Link to=\"/login\">Sign in.</Link>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textPrimary\">\n              Forgot password?{\" \"}\n              <Link to=\"/password-forget\">Reset password.</Link>\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  );\n};\n\nexport default Register;\n","import { gql } from \"@apollo/client\";\n\nexport const UserInfo = gql`\n  fragment userInfo on User {\n    _id\n    username\n    name\n    email\n    images {\n      url\n      key\n    }\n    about\n    createdAt\n    updatedAt\n  }\n`;\n","import { gql } from \"@apollo/client\";\n\nimport { UserInfo } from \"../fragments/auth\";\n\nexport const UpdateUser = gql`\n  mutation UpdateUser($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      ...userInfo\n    }\n  }\n  ${UserInfo}\n`;\n\nexport const CreateUser = gql`\n  mutation CreateUser {\n    createUser {\n      username\n      email\n    }\n  }\n`;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { AuthContext } from \"../../context/authContext\";\nimport { auth } from \"../../services/firebase\";\nimport { CreateUser } from \"../../apollo/mutations/auth\";\n\nconst CompleteRegister = () => {\n  const history = useHistory();\n  const [createUser] = useMutation(CreateUser);\n  const { dispatch } = useContext(AuthContext);\n  const [email] = useState(localStorage.getItem(\"REGISTER_EMAIL\") || \"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailLink, setEmailLink] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setEmailLink(window.location.href);\n\n    // Hide query string after storing to state\n    window.history.pushState({}, \"\", \"/complete-register\");\n  }, []);\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    if (!(email && password)) {\n      toast.error(\"Email and password are required.\");\n    }\n    setLoading(true);\n    try {\n      // Sign in with email link\n      const res = await auth.signInWithEmailLink(email, emailLink);\n\n      // Update user to include a password\n      if (res.user?.emailVerified) {\n        localStorage.removeItem(\"REGISTER_EMAIL\");\n        const user = auth.currentUser;\n        console.log({ user });\n\n        await user.updatePassword(password);\n\n        // Store user into auth context\n        const { token } = await user.getIdTokenResult();\n\n        localStorage.setItem(\"AUTH_TOKEN\", token);\n        dispatch({\n          type: \"USER_AUTHENTICATED\",\n          payload: { email: user.email, token },\n        });\n\n        // Save user into DB\n        await createUser();\n\n        toast.success(\"Your registration was successful!\");\n\n        // Redirect user\n        setLoading(false);\n        return history.push(\"/dashboard/profile\");\n      }\n\n      // User's email is not verified.\n      throw new Error(\"Unable to verify your email, try again later.\");\n    } catch (error) {\n      console.error(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs>\n        <Card style={{ padding: \"1rem\" }}>\n          <CardContent>\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                Set a password\n              </Typography>\n              <TextField\n                id=\"complete-email\"\n                label=\"Enter your email address\"\n                fullWidth\n                value={email}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"email\" }}\n                disabled={true}\n              />\n              <TextField\n                id=\"complete-password\"\n                label=\"Enter a password\"\n                fullWidth\n                value={password}\n                onChange={(evt) => setPassword(evt.target.value)}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"password\" }}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={!password || !!loading}\n                fullWidth\n                type=\"submit\"\n              >\n                {loading ? (\n                  <CircularProgress\n                    style={{ height: \"1.5rem\", width: \"1.5rem\" }}\n                  />\n                ) : (\n                  \"Complete Registeration\"\n                )}\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  );\n};\n\nexport default CompleteRegister;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { AuthContext } from \"../../context/authContext\";\nimport { auth, googleAuthProvider } from \"../../services/firebase\";\nimport GoogleIcon from \"../../assets/icons/google.png\";\nimport { CreateUser } from \"../../apollo/mutations/auth\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [createUser] = useMutation(CreateUser);\n  const { dispatch } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleLogin = async (evt) => {\n    evt.preventDefault();\n    if (!(email && password)) {\n      return toast.error(\"Email and password are required.\");\n    }\n    setLoading(true);\n    try {\n      // Try sign in with email and password\n      const { user } = await auth.signInWithEmailAndPassword(email, password);\n      await authenticateUser(user);\n    } catch (error) {\n      console.error(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSignin = async () => {\n    setLoading(true);\n    try {\n      // Try sign in with google\n      const { user } = await auth.signInWithPopup(googleAuthProvider);\n      await authenticateUser(user);\n    } catch (error) {\n      console.error(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const authenticateUser = async (user) => {\n    const { token } = await user.getIdTokenResult();\n\n    localStorage.setItem(\"AUTH_TOKEN\", token);\n    dispatch({\n      type: \"USER_AUTHENTICATED\",\n      payload: { email: user.email, token },\n    });\n\n    // Save user info to DB if not already in DB\n    await createUser();\n\n    toast.success(\"Sign in success.\");\n    setLoading(false);\n\n    // Redirect user back to homepage\n    history.push(\"/dashboard/profile\");\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs>\n        <Card style={{ padding: \"1rem\" }} elevation={3}>\n          <CardContent>\n            <Box component=\"form\" onSubmit={handleLogin}>\n              <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                Log in\n              </Typography>\n              <TextField\n                id=\"complete-email\"\n                label=\"Enter your email address\"\n                fullWidth\n                value={email}\n                onChange={(evt) => setEmail(evt.target.value)}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"email\" }}\n                disabled={loading}\n              />\n              <TextField\n                id=\"complete-password\"\n                label=\"Enter a password\"\n                fullWidth\n                value={password}\n                onChange={(evt) => setPassword(evt.target.value)}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"password\" }}\n                disabled={loading}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={!password || !!loading}\n                fullWidth\n                type=\"submit\"\n              >\n                {loading ? (\n                  <CircularProgress\n                    style={{ height: \"1.5rem\", width: \"1.5rem\" }}\n                  />\n                ) : (\n                  \"Log in\"\n                )}\n              </Button>\n              <IconButton\n                onClick={handleGoogleSignin}\n                style={{ marginTop: \"0.5rem\", padding: \"0.25rem\" }}\n              >\n                <img src={GoogleIcon} alt=\"Sign in with google\" width={30} />\n              </IconButton>\n            </Box>\n            <Typography\n              variant=\"caption\"\n              style={{ display: \"block\", marginTop: \"0.5rem\" }}\n            >\n              Don't own an account? <Link to=\"/register\">Sign up.</Link>\n            </Typography>\n            <Typography variant=\"caption\" color=\"textPrimary\">\n              Forgot password?{\" \"}\n              <Link to=\"/password-forget\">Reset password.</Link>\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { auth } from \"../../services/firebase\";\nimport { toast } from \"react-toastify\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst ForgetPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    try {\n      await auth.sendPasswordResetEmail(email, {\n        url: process.env.REACT_APP_FORGET_PASSWORD_REDIRECT,\n        handleCodeInApp: true,\n      });\n      setEmail(\"\");\n      toast.success(\"Reset password email successfully sent.\");\n    } catch (error) {\n      console.error(\"[FORGET PASSWORD ERROR]\", error);\n      toast.error(error.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs />\n      <Grid item xs>\n        <Card style={{ padding: \"1rem\" }} elevation={3}>\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Forget Password\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit}>\n              <TextField\n                id=\"register-email\"\n                label=\"Enter your email address\"\n                fullWidth\n                value={email}\n                onChange={(evt) => setEmail(evt.target.value)}\n                style={{ marginBottom: \"1rem\" }}\n                inputProps={{ type: \"email\" }}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={!email || !!loading}\n                fullWidth\n                type=\"submit\"\n              >\n                {loading ? (\n                  <CircularProgress\n                    style={{ height: \"1.5rem\", width: \"1.5rem\" }}\n                  />\n                ) : (\n                  \"Send password reset email\"\n                )}\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs />\n    </Grid>\n  );\n};\n\nexport default ForgetPassword;\n","import { gql } from \"@apollo/client\";\n\nimport { UserInfo } from \"../fragments/auth\";\n\nexport const GetUser = gql`\n  query GetUser {\n    getUser {\n      ...userInfo\n    }\n  }\n  ${UserInfo}\n`;\n\nexport const ListUsers = gql`\n  query ListUsers {\n    listUsers {\n      ...userInfo\n    }\n  }\n  ${UserInfo}\n`;\n\nexport const GetPublicProfile = gql`\n  query GetPublicProfile($username: String!) {\n    getPublicProfile(username: $username) {\n      ...userInfo\n    }\n  }\n  ${UserInfo}\n`;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { SearchPosts } from \"../../apollo/queries/posts\";\n\nlet TIMEOUT;\n\nconst SearchBar = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [searchPosts, { data }] = useLazyQuery(SearchPosts);\n  const [loading, setLoading] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (loading) {\n      clearTimeout(TIMEOUT);\n      TIMEOUT = setTimeout(() => {\n        setLoading(false);\n      }, 750);\n    }\n    return () => {\n      if (TIMEOUT) clearTimeout(TIMEOUT);\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    (async () => {\n      if (searchText) {\n        setLoading(true);\n        searchPosts({ variables: { term: searchText } });\n      }\n    })();\n  }, [searchText, searchPosts]);\n\n  // Update results upon data change\n  useEffect(() => {\n    if (data) {\n      setOptions(data.searchPosts);\n    }\n  }, [data]);\n\n  return (\n    <Autocomplete\n      id=\"search-bar\"\n      style={{ width: 250 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option) => {\n        history.push(`/posts/${option._id}`);\n      }}\n      getOptionLabel={(option) => option.title}\n      options={options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={classes.input}\n          label=\"Search...\"\n          variant=\"standard\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <Fragment>\n                {loading ? (\n                  <CircularProgress style={{ color: \"#fff\" }} size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </Fragment>\n            ),\n            style: { borderBottom: \"1px solid white\", color: \"#fff\" },\n          }}\n        />\n      )}\n    />\n  );\n};\n\nexport default SearchBar;\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginTop: \"-1.25rem\",\n    \"& .MuiFormLabel-root\": {\n      color: \"#fff\",\n    },\n    \"& .MuiSvgIcon-root\": {\n      fill: \"#fff\",\n    },\n    \"& .MuiInputLabel-shrink\": {\n      transform: `translate(0, 7px) scale(0.75)`,\n    },\n  },\n}));\n","import Resizer from \"react-image-file-resizer\";\n\nconst resizeFile = (file) =>\n  new Promise((resolve) => {\n    Resizer.imageFileResizer(\n      file,\n      600,\n      600,\n      \"JPEG\",\n      100,\n      0,\n      (uri) => {\n        resolve(uri);\n      },\n      \"base64\"\n    );\n  });\n\nexport default resizeFile;\n","import axios from \"axios\";\nimport resizeFile from \"./resizeFile\";\n\nexport const uploadProfileImages = async (imageFiles) => {\n  const promises = imageFiles.map((i) => resizeFile(i));\n  const imageUris = await Promise.all(promises);\n  const res = await axios.post(\n    `${process.env.REACT_APP_API_URL}/api/v1/images/profiles`,\n    { images: imageUris },\n    {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n      },\n    }\n  );\n  return res.data.data.images;\n};\n\nexport const deleteProfileImage = async (image) => {\n  const res = await axios.delete(\n    `${process.env.REACT_APP_API_URL}/api/v1/images/profiles`,\n    {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n      },\n      params: { imageKey: image.key },\n    }\n  );\n  return res.data.data.message;\n};\n\nexport const uploadPostImage = async (imageFile) => {\n  const res = await axios.post(\n    `${process.env.REACT_APP_API_URL}/api/v1/images/posts`,\n    { image: await resizeFile(imageFile) },\n    {\n      headers: {\n        authorization: `Bearer ${localStorage.getItem(\"AUTH_TOKEN\")}`,\n      },\n    }\n  );\n  return res.data.data.image;\n};\n","import { useState, useEffect } from \"react\";\n\n// Reset dropzone after adding or deleting images\nconst useResetDropZone = (images) => {\n  const [showDropZone, setShowDropZone] = useState(true);\n  useEffect(() => {\n    setShowDropZone(false);\n\n    setTimeout(() => {\n      setShowDropZone(true);\n    }, 1);\n  }, [images.length]);\n  return { showDropZone };\n};\n\nexport default useResetDropZone;\n","import React from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nconst ImageDropZone = ({ showDropZone, images, handleFiles }) => {\n  return showDropZone ? (\n    <DropzoneArea\n      acceptedFiles={[\"image/*\"]}\n      dropzoneText={\n        images.length >= 5\n          ? `You already have 5 profile images, delete some to add new ones.`\n          : `You have ${images.length} profile images, you can upload ${\n              5 - images.length\n            } more.`\n      }\n      onChange={handleFiles}\n      inputProps={{ disabled: images.length >= 5 }}\n      filesLimit={5 - images.length}\n      clearOnUnmount\n    />\n  ) : (\n    <div className=\"MuiDropzoneArea-root\" />\n  );\n};\n\nexport default ImageDropZone;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport ImageFadeIn from \"react-image-fade-in\";\n\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst ProfileImages = ({ images, handleDelete }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.images}>\n      {images.map((i) => (\n        <Box key={i.url} className={classes.image}>\n          {handleDelete && i.key && (\n            <IconButton\n              className={classes.deleteBtn}\n              onClick={() => handleDelete(i)}\n            >\n              <DeleteIcon className={classes.deleteIcon} />\n            </IconButton>\n          )}\n          <ImageFadeIn\n            height={150}\n            width={150}\n            src={i.url}\n            alt=\"User profile\"\n            style={{\n              boxShadow: \"0 3px 7px rgb(0,0,0,0.1)\",\n              borderRadius: 3,\n              objectFit: \"cover\",\n              height: 150,\n              width: 150,\n            }}\n          />\n        </Box>\n      ))}\n    </Box>\n  );\n};\n\nexport default ProfileImages;\n\nconst useStyles = makeStyles(() => ({\n  images: {\n    marginBottom: \"1rem\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  image: {\n    position: \"relative\",\n    marginRight: \"1.25rem\",\n    \"&:hover\": {\n      \"& .MuiIconButton-root\": {\n        opacity: 1,\n        transition: \"all 0.2s ease\",\n      },\n    },\n  },\n  deleteBtn: {\n    opacity: 0,\n    transition: \"all 0.2s ease\",\n    position: \"absolute\",\n    right: 4,\n    top: 2,\n    backgroundColor: \"#e0e0e0\",\n    padding: \"0.25rem\",\n    boxShadow: \"0 3px 7px rgb(0,0,0,0.075)\",\n    \"&:hover\": {\n      backgroundColor: \"#eeeeee\",\n    },\n  },\n  deleteIcon: {\n    width: 20,\n    height: 20,\n  },\n}));\n","import React, { Fragment } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nconst UpdateProfileForm = ({\n  email,\n  username,\n  name,\n  about,\n  loading,\n  handleChange,\n}) => {\n  return (\n    <Fragment>\n      <TextField\n        id=\"profile-update-email\"\n        label=\"Your email.\"\n        fullWidth\n        name=\"email\"\n        value={email}\n        style={{ marginBottom: \"1rem\" }}\n        disabled={true}\n      />\n      <TextField\n        id=\"profile-update-username\"\n        label=\"Enter a new username.\"\n        fullWidth\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        style={{ marginBottom: \"1rem\" }}\n        disabled={loading}\n      />\n      <TextField\n        id=\"profile-update-name\"\n        label=\"Enter a new name.\"\n        fullWidth\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        style={{ marginBottom: \"1rem\" }}\n        disabled={loading}\n      />\n      <TextField\n        id=\"profile-update-about\"\n        label=\"Write something about your self.\"\n        fullWidth\n        name=\"about\"\n        value={about}\n        onChange={handleChange}\n        style={{ marginBottom: \"1rem\" }}\n        disabled={loading}\n        multiline\n      />\n    </Fragment>\n  );\n};\n\nexport default UpdateProfileForm;\n","import React, { useState, useMemo } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { toast } from \"react-toastify\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { GetUser } from \"../../../apollo/queries/auth\";\nimport { UpdateUser } from \"../../../apollo/mutations/auth\";\nimport {\n  uploadProfileImages,\n  deleteProfileImage,\n} from \"../../../utils/restRequests\";\nimport useResetDropZone from \"../../../hooks/useResetDropZone\";\nimport ImageDropZone from \"./ImageDropZone\";\nimport ProfileImages from \"./ProfileImages\";\nimport UpdateProfileForm from \"./UpdateProfileForm\";\n\nconst INITIAL_STATE = {\n  username: \"\",\n  name: \"\",\n  email: \"\",\n  about: \"\",\n  images: [],\n};\n\nconst ProfileDetails = () => {\n  const [imageFiles, setImageFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState(INITIAL_STATE);\n  const { username, name, about, images } = formData;\n\n  // Apollo\n  const { data } = useQuery(GetUser);\n  const [updateUser] = useMutation(UpdateUser, {\n    variables: {\n      input: {\n        username,\n        name,\n        about,\n        images,\n      },\n    },\n  });\n\n  // Prefill profile fields once apollo fetches profile data\n  useMemo(() => {\n    if (data?.getUser) {\n      setFormData(data.getUser);\n    }\n  }, [data]);\n\n  // Reset dropzone after adding or deleting images\n  const { showDropZone } = useResetDropZone(images);\n\n  // Handle form changes\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Update user's profile images and details\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    try {\n      if (imageFiles.length) {\n        const newImages = await uploadProfileImages(imageFiles);\n        setFormData((prev) => ({\n          ...prev,\n          images: [...prev.images, ...newImages],\n        }));\n      }\n      const updatedUser = await updateUser();\n      setFormData(updatedUser.data.updateUser);\n      toast.success(\"Profile successfully updated.\");\n    } catch (error) {\n      console.error(\"PROFILE UPDATE ERROR\", error);\n      toast.error(error.message || error.response.data.message);\n    }\n    setLoading(false);\n  };\n\n  // Delete profile image\n  const handleDelete = async (image) => {\n    setLoading(true);\n    try {\n      const successMessage = await deleteProfileImage(image);\n      setFormData((prev) => ({\n        ...prev,\n        images: prev.images.filter((i) => i.key !== image.key),\n      }));\n      setImageFiles([]);\n      toast.success(successMessage);\n    } catch (error) {\n      console.error(\"PROFILE UPDATE ERROR\", error);\n      toast.error(error.response.data.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      style={{ marginBottom: \"1rem\" }}\n      onSubmit={handleSubmit}\n    >\n      <Typography variant=\"h6\" style={{ marginBottom: \"0.5rem\" }}>\n        Update your profile:\n      </Typography>\n\n      <UpdateProfileForm\n        {...formData}\n        loading={loading}\n        handleChange={handleChange}\n      />\n\n      <ProfileImages images={images} handleDelete={handleDelete} />\n\n      <ImageDropZone\n        images={images}\n        showDropZone={showDropZone}\n        handleFiles={setImageFiles}\n      />\n\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        color=\"primary\"\n        disabled={loading}\n      >\n        {loading ? <CircularProgress size={24} /> : \"Update\"}\n      </Button>\n    </Box>\n  );\n};\n\nexport default ProfileDetails;\n","import React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst ResetPasswordDialog = ({\n  children,\n  title,\n  open,\n  handleClose,\n  confirmButtonText,\n  handleConfirm,\n  loading,\n  disabled,\n}) => {\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" disabled={loading}>\n          Cancel\n        </Button>\n        <Button\n          onClick={handleConfirm}\n          color=\"primary\"\n          variant=\"contained\"\n          autoFocus\n          disabled={disabled ? disabled || loading : loading}\n        >\n          {loading ? <CircularProgress size={24} /> : confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ResetPasswordDialog;\n","import React, { Fragment, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { auth } from \"../../../services/firebase.js\";\nimport Dialog from \"../../ui/Dialog\";\n\nconst ProfileResetPassword = () => {\n  const [open, setOpen] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleResetPassword = async () => {\n    if (password !== passwordConfirm) {\n      return toast.error(\"Passwords do not match.\");\n    }\n    setLoading(true);\n    try {\n      setLoading(false);\n      await auth.currentUser.updatePassword(password);\n      toast.success(\"Password successfully reset.\");\n      setPassword(\"\");\n      setPasswordConfirm(\"\");\n      setOpen(false);\n    } catch (error) {\n      console.error(\"[RESET PASSWORD ERROR]\", error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={setOpen.bind(this, true)}\n      >\n        Reset Password\n      </Button>\n      <Dialog\n        title=\"Reset your password\"\n        open={open}\n        handleClose={setOpen.bind(this, false)}\n        confirmButtonText=\"Reset\"\n        loading={loading}\n        handleConfirm={handleResetPassword}\n        disabled={!(password && passwordConfirm)}\n      >\n        <TextField\n          id=\"reset-password\"\n          label=\"Enter your new password\"\n          fullWidth\n          value={password}\n          onChange={(evt) => setPassword(evt.target.value)}\n          style={{ marginBottom: \"0.25rem\" }}\n          inputProps={{ type: \"password\" }}\n          disabled={loading}\n        />\n        <TextField\n          id=\"reset-password-confirm\"\n          label=\"Confirm your new password\"\n          fullWidth\n          value={passwordConfirm}\n          onChange={(evt) => setPasswordConfirm(evt.target.value)}\n          style={{ marginBottom: \"1rem\" }}\n          inputProps={{ type: \"password\" }}\n          disabled={loading}\n        />\n      </Dialog>\n    </Fragment>\n  );\n};\n\nexport default ProfileResetPassword;\n","import React, { Fragment, useContext } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ProfileDetails from \"../../components/dashboard/profileDetails/ProfileDetails\";\nimport ProfileResetPassword from \"../../components/dashboard/profileDetails/ProfileResetPassword\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst Profile = () => {\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n\n  return (\n    <Fragment>\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        style={{ marginBottom: \"1rem\", fontWeight: \"500\" }}\n      >\n        Welcome back, {user?.email.split(\"@\")[0]}!\n      </Typography>\n      <ProfileDetails />\n      <ProfileResetPassword />\n    </Fragment>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst PostEditor = ({ content, setContent }) => {\n  return <ReactQuill value={content} onChange={setContent} />;\n};\n\nexport default PostEditor;\n","import React from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nconst PostImageUpdate = ({ image, handleFiles, isUpdate = false }) => {\n  return (\n    <DropzoneArea\n      acceptedFiles={[\"image/*\"]}\n      dropzoneText={\n        !image\n          ? isUpdate\n            ? \"Update Image\"\n            : \"Attach an image for your post\"\n          : image.name\n      }\n      onChange={handleFiles}\n      inputProps={{ disabled: false }}\n      filesLimit={1}\n      clearOnUnmount\n    />\n  );\n};\n\nexport default PostImageUpdate;\n","import React, { useState, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ChipInput from \"material-ui-chip-input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport { uploadPostImage } from \"../../utils/restRequests\";\nimport { CreatePost as CreatePostMutation } from \"../../apollo/mutations/posts\";\nimport { ListPostsByUser, ListPosts } from \"../../apollo/queries/posts\";\nimport PostEditor from \"../../components/posts/PostEditor\";\nimport PostImageUpdate from \"../../components/posts/PostImageUpdate\";\n\nconst CreatePost = () => {\n  const [title, setTitle] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [showDropZone, setShowDropZone] = useState(true);\n\n  // Mutation with cache update\n  const [createPost] = useMutation(CreatePostMutation, {\n    update: (cache, { data: { createPost } }) => {\n      try {\n        // Read Query from cache (user's posts)\n        const { listPostsByUser } = cache.readQuery({\n          query: ListPostsByUser,\n          variables: { username: createPost.postedBy.username },\n        });\n\n        // Write mutation data to cache (user's posts)\n        cache.writeQuery({\n          query: ListPostsByUser,\n          data: { listPostsByUser: [createPost, ...listPostsByUser] },\n          variables: { username: createPost.postedBy.username },\n        });\n      } catch (error) {\n        // Handle listPostsByUser query not executed yet\n        console.error(\n          \"[CERATE POST UPDATE CACHE FAILED - ListPostsByUser QUERY]\"\n        );\n      }\n\n      try {\n        // Read Query from cache (all posts)\n        const { listPosts } = cache.readQuery({\n          query: ListPosts,\n        });\n        // Write mutation data to cache (all posts)\n        cache.writeQuery({\n          query: ListPosts,\n          data: { listPosts: [createPost, ...listPosts] },\n        });\n      } catch (error) {\n        // Handle listPosts query not executed yet\n        console.error(\"[CERATE POST UPDATE CACHE FAILED - ListPosts QUERY]\");\n      }\n    },\n  });\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    try {\n      // Handle missing fields\n      if (!(title && content)) {\n        return toast.error(\"Title and content are required.\");\n      }\n\n      // Update post image\n      let uploadedImg;\n      if (image) {\n        uploadedImg = await uploadPostImage(image);\n      }\n\n      // Post to DB\n      const createPostRes = await createPost({\n        variables: {\n          input: {\n            title,\n            content,\n            tags,\n            image: uploadedImg,\n          },\n        },\n      });\n\n      toast.success(\n        `Post \"${createPostRes.data.createPost.title}\" has been successfully publishsed.`\n      );\n\n      // Reset inputs\n      setTitle(\"\");\n      setContent(\"\");\n      setTags([]);\n      setImage(null);\n\n      // Reset dropzone\n      setShowDropZone(false);\n      setTimeout(() => {\n        setShowDropZone(true);\n      }, 0);\n    } catch (error) {\n      console.error(\"[CREATE POST ERROR]\", error);\n      toast.error(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit}>\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <Typography\n            variant=\"h4\"\n            component=\"h1\"\n            style={{ marginBottom: \"1rem\", fontWeight: \"500\" }}\n          >\n            Create a post!\n          </Typography>\n        </Grid>\n\n        {/* Post button */}\n        <Grid item>\n          <Button\n            disabled={loading || !(title && content)}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            {loading ? (\n              <CircularProgress size={24} />\n            ) : (\n              <Fragment>\n                <ShareIcon style={{ marginRight: 3, fontSize: 20 }} />{\" \"}\n                <span style={{ marginTop: 5 }}>Post</span>\n              </Fragment>\n            )}\n          </Button>\n        </Grid>\n      </Grid>\n\n      {/* Post title input */}\n      <TextField\n        id=\"create-post-title\"\n        label=\"Give your post a title\"\n        fullWidth\n        value={title}\n        onChange={(evt) => setTitle(evt.target.value)}\n        inputProps={{ type: \"text\" }}\n        style={{ marginBottom: \"1rem\" }}\n        disabled={loading}\n      />\n\n      {/* Post tags input */}\n      <ChipInput\n        value={tags}\n        fullWidth\n        label=\"Add post tags\"\n        placeholder=\"Type and press enter to add tags\"\n        style={{ marginBottom: \"1rem\" }}\n        onChange={setTags}\n      />\n\n      {/* Post image upload */}\n      {showDropZone && (\n        <PostImageUpdate\n          image={image}\n          handleFiles={(imgs) => setImage(imgs.length ? imgs[0] : null)}\n        />\n      )}\n      <PostEditor content={content} setContent={setContent} />\n    </Box>\n  );\n};\n\nexport default CreatePost;\n","import { useState, useEffect } from \"react\";\nimport nprogress from \"nprogress\";\n\nconst useNProgress = () => {\n  useState(nprogress.start());\n\n  useEffect(() => {\n    nprogress.done();\n    return () => nprogress.start();\n  });\n  return null;\n};\n\nexport default useNProgress;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport useNProgress from \"../../hooks/useNProgress\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst ProgressRoute = ({ component: Component, ...rest }) => {\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n\n  useNProgress();\n\n  return !user && !localStorage.getItem(\"AUTH_TOKEN\") ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Route {...rest} component={Component} />\n  );\n};\n\nexport default ProgressRoute;\n","import React from \"react\";\nimport { Switch, useLocation, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport Profile from \"./Profile\";\nimport CreatePost from \"./CreatePost\";\nimport PrivateRoute from \"../../components/routes/PrivateRoute\";\nimport MyPosts from \"./MyPosts\";\n\nconst SUBPATHS = [\n  { pathname: \"/dashboard/profile\", label: \"Dashboard\", component: Profile },\n  {\n    pathname: \"/dashboard/create\",\n    label: \"Create Post\",\n    component: CreatePost,\n  },\n  {\n    pathname: \"/dashboard/posts\",\n    label: \"My Posts\",\n    component: MyPosts,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={4} md={3}>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          className={classes.tabs}\n          value={SUBPATHS.findIndex(\n            (path) => path.pathname === location.pathname\n          )}\n        >\n          {SUBPATHS.map((path) => (\n            <Tab\n              key={path.pathname}\n              component={Link}\n              to={path.pathname}\n              label={path.label}\n            />\n          ))}\n        </Tabs>\n      </Grid>\n      <Grid item xs={12} sm={8} md={9}>\n        <Switch>\n          {SUBPATHS.map((path) => (\n            <PrivateRoute\n              key={path.pathname}\n              exact\n              path={path.pathname}\n              component={path.component}\n            />\n          ))}\n        </Switch>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { useQuery, useLazyQuery } from \"@apollo/client\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport PostCard from \"../../components/posts/PostCard\";\nimport PostCardSkeleton from \"../../components/posts/PostCardSkeleton\";\nimport { ListPostsByUser } from \"../../apollo/queries/posts\";\nimport { GetUser } from \"../../apollo/queries/auth.js\";\n\nconst MyPost = () => {\n  const { data } = useQuery(GetUser);\n\n  const [\n    listPostsByUser,\n    { data: postsData, loading: postsLoading, error: postsError },\n  ] = useLazyQuery(ListPostsByUser);\n\n  useEffect(() => {\n    if (data && data.getUser) {\n      listPostsByUser({ variables: { username: data.getUser.username } });\n    }\n  }, [data, listPostsByUser]);\n\n  return (\n    <Grid container spacing={4}>\n      {/* Show skeleton cards when loading */}\n      {postsLoading &&\n        Array.from({ length: 8 }).map((_, idx) => (\n          <Fade in={postsLoading} timeout={250} key={idx}>\n            <Grid item xs={12} sm={6}>\n              <PostCardSkeleton />\n            </Grid>\n          </Fade>\n        ))}\n\n      {/* Show cards */}\n      {!postsLoading &&\n        !postsError &&\n        postsData &&\n        postsData.listPostsByUser.map((post) => (\n          <Fade\n            in={!postsLoading && !postsError && !!postsData}\n            timeout={750}\n            key={post._id}\n          >\n            <Grid item xs={12} sm={6}>\n              <PostCard post={post} />\n            </Grid>\n          </Fade>\n        ))}\n    </Grid>\n  );\n};\n\nexport default MyPost;\n","import React, { Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport ProfileImages from \"../../components/dashboard/profileDetails/ProfileImages\";\nimport PostCard from \"../../components/posts/PostCard\";\nimport PostCardSkeleton from \"../../components/posts/PostCardSkeleton\";\nimport { GetPublicProfile } from \"../../apollo/queries/auth\";\nimport { ListPostsByUser } from \"../../apollo/queries/posts\";\n\nconst UserPublicProfile = () => {\n  const { username } = useParams();\n\n  const { data, loading, error } = useQuery(GetPublicProfile, {\n    variables: { username },\n  });\n\n  const {\n    data: postsData,\n    loading: postsLoading,\n    error: postsError,\n  } = useQuery(ListPostsByUser, { variables: { username } });\n\n  return (\n    !loading &&\n    !error &&\n    data && (\n      <Fragment>\n        <Grid container>\n          <Hidden xsDown>\n            <Grid item sm={1} md={2} />\n          </Hidden>\n          <Grid item xs={12} sm={10} md={8}>\n            <Box>\n              <Typography\n                variant=\"h4\"\n                component=\"h1\"\n                style={{ fontWeight: 500 }}\n              >\n                @{data.getPublicProfile.username}\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                <span style={{ fontWeight: 500 }}>Name: </span>\n                {data.getPublicProfile.name || \"anonymous\"}\n              </Typography>\n              <Typography paragraph>\n                <span style={{ fontWeight: 500 }}>About:</span>{\" \"}\n                {data.getPublicProfile.about || \"No about section yet.\"}\n              </Typography>\n              <ProfileImages images={data.getPublicProfile.images} />\n            </Box>\n          </Grid>\n          <Hidden xsDown>\n            <Grid item sm={1} md={2} />\n          </Hidden>\n        </Grid>\n\n        {/* User's posts */}\n        <Typography\n          component=\"h2\"\n          style={{ fontWeight: 500, fontSize: \"1.5rem\" }}\n          align=\"center\"\n          paragraph\n        >\n          @{data.getPublicProfile.username} 's Posts:\n        </Typography>\n        <Grid container spacing={4}>\n          {/* Show skeleton cards when loading */}\n          {postsLoading &&\n            Array.from({ length: 8 }).map((_, idx) => (\n              <Fade in={postsLoading} timeout={250} key={idx}>\n                <Grid item xs={4}>\n                  <PostCardSkeleton />\n                </Grid>\n              </Fade>\n            ))}\n\n          {/* Show cards */}\n          {!postsLoading &&\n            !postsError &&\n            postsData &&\n            postsData.listPostsByUser.map((post) => (\n              <Fade\n                in={!postsLoading && !postsError && !!postsData}\n                timeout={750}\n                key={post._id}\n              >\n                <Grid item xs={12} sm={6} md={4}>\n                  <PostCard post={post} />\n                </Grid>\n              </Fade>\n            ))}\n        </Grid>\n      </Fragment>\n    )\n  );\n};\n\nexport default UserPublicProfile;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport ImageFadeIn from \"react-image-fade-in\";\nimport parse from \"html-react-parser\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport { GetPost } from \"../../apollo/queries/posts\";\n\nconst Post = () => {\n  const { id } = useParams();\n  const { data, error, loading } = useQuery(GetPost, { variables: { id } });\n\n  if (loading) return \"loading\";\n  if (error) return error.message;\n\n  return (\n    data && (\n      <Grid container justify=\"center\">\n        <Grid item xs={11} sm={9} md={8}>\n          <Paper style={{ padding: \"4rem 3rem\" }} elevation={3}>\n            <Typography\n              variant=\"h4\"\n              component=\"h1\"\n              style={{ fontWeight: 500 }}\n              paragraph\n              align=\"center\"\n            >\n              {data.getPost.title}\n            </Typography>\n\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"2rem\",\n              }}\n            >\n              <Avatar\n                src={data.getPost.postedBy.images[0].url}\n                style={{ marginRight: \"0.5rem\", width: 25, height: 25 }}\n              />\n              <Typography variant=\"body2\" style={{ margin: 0 }}>\n                @{data.getPost.postedBy.username}\n              </Typography>\n              <span style={{ margin: \"0 0.5rem\" }}>-</span>\n              <Typography variant=\"body2\" style={{ margin: 0 }}>\n                {new Date(data.getPost.createdAt).toLocaleDateString()}\n              </Typography>\n            </div>\n\n            <ImageFadeIn\n              src={data.getPost.image.url}\n              height={200}\n              style={{\n                height: 200,\n                width: \"80%\",\n                objectFit: \"cover\",\n                display: \"block\",\n                borderRadius: 10,\n                margin: \"0 auto 2rem\",\n              }}\n            />\n            <div>{parse(data.getPost.content)}</div>\n          </Paper>\n        </Grid>\n      </Grid>\n    )\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport useNProgress from \"../../hooks/useNProgress\";\n\nconst ProgressRoute = (props) => {\n  useNProgress();\n\n  return <Route {...props} />;\n};\n\nexport default ProgressRoute;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport useNProgress from \"../../hooks/useNProgress\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst ProgressRoute = ({ component: Component, ...rest }) => {\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n\n  useNProgress();\n\n  return localStorage.getItem(\"AUTH_TOKEN\") || user ? (\n    <Redirect to=\"/dashboard/profile\" />\n  ) : (\n    <Route {...rest} component={Component} />\n  );\n};\n\nexport default ProgressRoute;\n","import {\n  ApolloClient,\n  InMemoryCache,\n  ApolloLink,\n  split,\n  HttpLink,\n} from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nconst httpLink = new HttpLink({\n  uri: `${process.env.REACT_APP_API_URL}/graphql`,\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `${process.env.REACT_APP_WS_URL}/graphql`,\n  options: {\n    reconnect: true,\n  },\n});\n\n// The split function takes three parameters:\n// * A function that's called for each operation to execute\n// * The Link to use for an operation if the function returns a \"truthy\" value\n// * The Link to use for an operation if the function returns a \"falsy\" value\nconst splitedLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === \"OperationDefinition\" &&\n      definition.operation === \"subscription\"\n    );\n  },\n  wsLink,\n  httpLink\n);\n\n// Authorization\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"AUTH_TOKEN\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\n// To remove __typename in mutations\n// https://github.com/apollographql/apollo-feature-requests/issues/6#issuecomment-676886539\nconst cleanTypeName = new ApolloLink((operation, forward) => {\n  if (operation.variables) {\n    const omitTypename = (key, value) =>\n      key === \"__typename\" ? undefined : value;\n    operation.variables = JSON.parse(\n      JSON.stringify(operation.variables),\n      omitTypename\n    );\n  }\n\n  return forward(operation).map((data) => {\n    return data;\n  });\n});\n\nexport default new ApolloClient({\n  link: ApolloLink.from([cleanTypeName, authLink, splitedLink]),\n  cache: new InMemoryCache(),\n});\n","import React, { useContext, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\nimport GroupRoundedIcon from \"@material-ui/icons/GroupRounded\";\nimport FreeBreakfastRoundedIcon from \"@material-ui/icons/FreeBreakfastRounded\";\n\nimport { auth } from \"../../services/firebase\";\nimport { AuthContext } from \"../../context/authContext\";\nimport client from \"../../apollo/client\";\nimport SearchBar from \"./SearchBar\";\n\nconst Navabr = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const { state, dispatch } = useContext(AuthContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await auth.signOut();\n      handleClose();\n\n      localStorage.removeItem(\"AUTH_TOKEN\");\n      await client.resetStore();\n      dispatch({ type: \"USER_LOGGED_OUT\" });\n      history.push(\"/login\");\n    } catch (error) {\n      console.error(\"LOGOUT ERROR\", error);\n      dispatch({ type: \"AUTH_ERROR\" });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Container>\n          <Toolbar className={classes.toolBar}>\n            <Hidden smUp>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n            </Hidden>\n            <Typography\n              component={Link}\n              to=\"/\"\n              variant=\"h6\"\n              className={classes.title}\n              style={{ marginRight: state.user ? \"0.5rem\" : \"auto\" }}\n            >\n              <FreeBreakfastRoundedIcon\n                style={{\n                  fontSize: 32,\n                  marginRight: 5,\n                }}\n              />\n              Realtime Blog\n            </Typography>\n\n            {state.user && (\n              <Button\n                component={Link}\n                to=\"/dashboard/create\"\n                color=\"inherit\"\n                style={{ marginLeft: \"1rem\", marginRight: \"auto\" }}\n              >\n                <PostAddIcon style={{ marginRight: 1 }} />\n                <span style={{ marginTop: 3 }}>New Post</span>\n              </Button>\n            )}\n\n            {location.pathname === \"/\" && <SearchBar />}\n\n            <IconButton\n              component={Link}\n              to=\"/users\"\n              style={{ color: \"#fff\", marginLeft: \"0.25rem\" }}\n            >\n              <GroupRoundedIcon />\n            </IconButton>\n\n            {!state.user ? (\n              <Fragment>\n                <Button component={Link} to=\"/login\" color=\"inherit\">\n                  Login\n                </Button>\n                <Button component={Link} to=\"/register\" color=\"inherit\">\n                  Register\n                </Button>\n              </Fragment>\n            ) : (\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                  edge=\"end\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  open={!!anchorEl}\n                  onClose={handleClose}\n                >\n                  <MenuItem\n                    component={Link}\n                    onClick={handleClose}\n                    to=\"/dashboard/profile\"\n                  >\n                    Dashboard\n                  </MenuItem>\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n};\n\nexport default Navabr;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    color: \"inherit\",\n    textDecoration: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  toolBar: {\n    padding: 0,\n  },\n}));\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst UserCard = ({ user }) => {\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        avatar={<Avatar src={user.images[0].url} />}\n        title={`@${user.username}`}\n        subheader={user.name || \"anonymous\"}\n      />\n      <Divider />\n      <CardContent style={{ minHeight: 105 }}>\n        <Typography>\n          <span style={{ fontWeight: 500 }}>About:</span>{\" \"}\n          {user.about && user.about.length > 100\n            ? `${user.about.slice(0, 100)}...`\n            : user.about && user.about.length <= 100\n            ? user.about\n            : \"No about section yet.\"}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <Button\n          component={Link}\n          to={`/users/${user.username}`}\n          color=\"primary\"\n          style={{ marginLeft: \"auto\" }}\n        >\n          Profile\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default UserCard;\n","import React from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst UserCardSkeleton = () => {\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        avatar={<Skeleton variant=\"circle\" width={40} height={40} />}\n        title={<Skeleton width=\"40%\" />}\n        subheader={<Skeleton width=\"30%\" />}\n      />\n      <Divider />\n      <CardContent style={{ minHeight: 100 }}>\n        <Skeleton style={{ height: 18, width: \"100%\", marginBottom: 4 }} />\n        <Skeleton style={{ height: 18, width: \"100%\", marginBottom: 4 }} />\n        <Skeleton style={{ height: 18, width: \"80%\" }} />\n      </CardContent>\n      <CardActions>\n        <Skeleton\n          width=\"20%\"\n          style={{ height: \"2.5rem\", marginLeft: \"auto\" }}\n        />\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default UserCardSkeleton;\n","import React, { Fragment } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport UserCard from \"../../components/users/UserCard\";\nimport UserCardSkeleton from \"../../components/users/UserCardSkeleton\";\nimport { ListUsers } from \"../../apollo/queries/auth\";\n\nconst UserList = () => {\n  const { loading, error, data } = useQuery(ListUsers);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <Fragment>\n      <Grid container spacing={4}>\n        {/* Show skeleton cards when loading */}\n        {loading &&\n          Array.from({ length: 8 }).map((_, idx) => (\n            <Fade in={loading} timeout={250} key={idx}>\n              <Grid item xs={4}>\n                <UserCardSkeleton />\n              </Grid>\n            </Fade>\n          ))}\n\n        {/* Show cards */}\n        {!loading &&\n          !error &&\n          data &&\n          data.listUsers.map((user) => (\n            <Fade\n              in={!loading && !error && !!data}\n              timeout={750}\n              key={user._id}\n            >\n              <Grid item xs={12} sm={6} md={4}>\n                <UserCard user={user} />\n              </Grid>\n            </Fade>\n          ))}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default UserList;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useMutation } from \"@apollo/client\";\nimport axios from \"axios\";\nimport ImageFadeIn from \"react-image-fade-in\";\nimport resizeFile from \"../../utils/resizeFile\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport ChipInput from \"material-ui-chip-input\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { UpdatePost } from \"../../apollo/mutations/posts\";\nimport { UpdatePostContext } from \"../../context/postUpdateContext\";\nimport { AuthContext } from \"../../context/authContext\";\nimport PostEditor from \"./PostEditor\";\nimport PostImageUpdate from \"./PostImageUpdate\";\nimport Dialog from \"../ui/Dialog\";\n\nconst variants = {\n  hidden: { opacity: 0, y: -50 },\n  visible: { opacity: 1, y: 0 },\n  exit: {\n    opacity: 0,\n  },\n};\n\nconst PostCardUpdate = () => {\n  const {\n    state: { post },\n    setState,\n  } = useContext(UpdatePostContext);\n  const {\n    state: { user },\n  } = useContext(AuthContext);\n\n  const [updatePost] = useMutation(UpdatePost);\n\n  const [title, setTitle] = useState(post?.title);\n  const [content, setContent] = useState(post?.content);\n  const [loading, setLoading] = useState(false);\n  const [tags, setTags] = useState(post?.tags);\n  const [newImage, setNewImage] = useState(null);\n\n  useEffect(() => {\n    if (post) {\n      setTitle(post.title);\n      setContent(post.content);\n      setTags(post.tags);\n    }\n  }, [post]);\n\n  const handleUpdate = async () => {\n    setLoading(true);\n\n    try {\n      let newImageObj;\n      if (newImage) {\n        const res = await axios.post(\n          `${process.env.REACT_APP_API_URL}/api/v1/images/posts`,\n          { image: await resizeFile(newImage) },\n          {\n            headers: {\n              authorization: `Bearer ${user?.token}`,\n            },\n          }\n        );\n        newImageObj = res.data.data.image;\n      }\n\n      // Individual entity cache is updated automatically if _id field is returned\n      const updateInput = {\n        id: post._id,\n        title,\n        content,\n        tags,\n      };\n\n      if (newImageObj) {\n        updateInput.image = newImageObj;\n      }\n\n      await updatePost({\n        variables: {\n          input: updateInput,\n        },\n      });\n\n      toast.success(`${post.title} is successfully updated.`);\n      setState({ post: null });\n    } catch (error) {\n      console.error(\"[UPDATE POST ERROR]\", error);\n      toast.error(error.message);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Dialog\n      disabled={!(title && content)}\n      loading={loading}\n      open={!!post}\n      confirmButtonText={loading ? <CircularProgress size={24} /> : \"Update\"}\n      title=\"Update Post\"\n      handleClose={() => setState({ post: false })}\n      handleConfirm={handleUpdate}\n    >\n      <AnimatePresence>\n        {post && (\n          <motion.div\n            variants={variants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n          >\n            {/* Post title input */}\n            <TextField\n              id=\"create-post-title\"\n              label=\"Give your post a title\"\n              fullWidth\n              value={title}\n              onChange={(evt) => setTitle(evt.target.value)}\n              inputProps={{ type: \"text\" }}\n              style={{ marginBottom: \"1rem\" }}\n              disabled={loading}\n            />\n\n            {/* Post tags input */}\n            <ChipInput\n              defaultValue={tags}\n              // value={tags}\n              fullWidth\n              label=\"Add post tags\"\n              placeholder=\"Type and press enter to add tags\"\n              style={{ marginBottom: \"1rem\" }}\n              onChange={setTags}\n            />\n\n            {post.image && (\n              <ImageFadeIn\n                width={200}\n                height={100}\n                duration={1000}\n                src={post.image.url}\n                alt={post.title}\n                style={{\n                  display: \"block\",\n                  width: 200,\n                  height: 100,\n                  objectFit: \"cover\",\n                  borderRadius: 10,\n                  marginBottom: \"1rem\",\n                }}\n              />\n            )}\n\n            {/* Post image upload */}\n            <PostImageUpdate\n              handleFiles={(imgs) => setNewImage(imgs.length ? imgs[0] : null)}\n              isUpdate\n            />\n            <PostEditor content={content} setContent={setContent} />\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Dialog>\n  );\n};\n\nexport default PostCardUpdate;\n","import React, { Fragment } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport Container from \"@material-ui/core/Container\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/auth/Register\";\nimport CompleteRegister from \"./pages/auth/CompleteRegister\";\nimport Login from \"./pages/auth/Login\";\nimport ForgetPassword from \"./pages/auth/ForgetPassword\";\nimport Dashboard from \"./pages/dashboard/Dashboard\";\nimport UserPublicProfile from \"./pages/users/UserPublicProfile\";\nimport Post from \"./pages/posts/Post\";\nimport Route from \"./components/routes/Route\";\nimport PrivateRoute from \"./components/routes/PrivateRoute\";\nimport PublicRoute from \"./components/routes/PublicRoute\";\nimport Navbar from \"./components/ui/Navbar\";\nimport UserList from \"./pages/users/UserList\";\nimport UpdatePostModal from \"./components/posts/PostCardUpdate\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Navbar />\n      <Container style={{ paddingTop: \"2rem\" }}>\n        <Switch>\n          <PublicRoute exact path=\"/register\" component={Register} />\n          <PublicRoute\n            exact\n            path=\"/complete-register\"\n            component={CompleteRegister}\n          />\n          <PublicRoute exact path=\"/login\" component={Login} />\n          <PublicRoute\n            exact\n            path=\"/password-forget\"\n            component={ForgetPassword}\n          />\n          <Route exact path=\"/users\" component={UserList} />\n          <Route exact path=\"/users/:username\" component={UserPublicProfile} />\n          <PrivateRoute\n            exact\n            path=\"/dashboard/:subroute\"\n            component={Dashboard}\n          />\n          <Route exact path=\"/posts/:id\" component={Post} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Container>\n      <ToastContainer bodyStyle={{ fontFamily: \"'Rubik', sans-serif\" }} />\n      <UpdatePostModal />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport default createMuiTheme({\n  typography: {\n    fontFamily: \"'Rubik', sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: \"#3d0e5b\",\n    },\n    secondary: {\n      main: \"#d11692\",\n    },\n    background: {\n      default: \"#fcfcfc\",\n    },\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"nprogress/nprogress.css\";\n\nimport { AuthProvider } from \"./context/authContext\";\nimport { UpdatePostProvider } from \"./context/postUpdateContext\";\nimport App from \"./App\";\nimport theme from \"./mui/theme\";\nimport client from \"./apollo/client\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <UpdatePostProvider>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n          </ThemeProvider>\n        </UpdatePostProvider>\n      </AuthProvider>\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}